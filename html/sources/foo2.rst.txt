Building the donut
==================
Code of the second grid
-----------------------
::

	void second_grid()
	{
	  Triangulation<2> triangulation;

	  const Point<2> center(1, 0);
	  const double   inner_radius = 0.5, outer_radius = 1.0;
	  GridGenerator::hyper_shell(
	    triangulation, center, inner_radius, outer_radius, 10);
	  for (unsigned int step = 0; step < 4 ; ++step)
	    {
	      for (auto &cell : triangulation.active_cell_iterators())
		{
		  for (unsigned int v = 0; v < GeometryInfo<2>::vertices_per_cell; ++v)
		    {
		      const double distance_from_center =
		        center.distance(cell->vertex(v));

		      if (std::fabs(distance_from_center - inner_radius) < 1e-10)
		        {
		          cell->set_refine_flag();
		          break;
		        }
		    }
		}

	      triangulation.execute_coarsening_and_refinement();
	    }
	    unsigned int countActive = 0, countAll = 0;
	for(auto& i: triangulation.active_cell_iterators()){
	  ++countActive;
	}
	for(auto&i:triangulation.cell_iterators()){
	  ++countAll;
	}
	std::ofstream outText("DonutText.txt");
	outText<<"      -----DONUT-----     "<<std::endl;
	outText<<"Active cells are: "<<countActive<<std::endl;
	outText<<"All cells are: "<<countAll<<std::endl;
	  std::ofstream out("grid-2.svg");
	  GridOut       grid_out;
	  grid_out.write_svg(triangulation, out);

	  std::cout << "Grid written to grid-2.svg" << std::endl;
	}
